/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers'
import type { IOpenGateway, IOpenGatewayInterface } from '../IOpenGateway'

const _abi = [
  {
    type: 'function',
    name: 'confirmationBlockHeight',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint40',
        internalType: 'uint40',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'delistToken',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        internalType: 'address[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'getPayment',
    inputs: [
      {
        name: 'paymentId',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [
      {
        name: 'paymentMetadata',
        type: 'tuple',
        internalType: 'struct PaymentMetadata',
        components: [
          {
            name: 'amount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'paymentId',
            type: 'bytes32',
            internalType: 'bytes32',
          },
          {
            name: 'paymentBlock',
            type: 'uint40',
            internalType: 'uint40',
          },
          {
            name: 'tokenAddress',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'tokenType',
            type: 'uint8',
            internalType: 'enum TokenType',
          },
          {
            name: 'payer',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'metadata',
            type: 'string',
            internalType: 'string',
          },
          {
            name: 'processed',
            type: 'bool',
            internalType: 'bool',
          },
        ],
      },
      {
        name: 'currentBlock',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'makePayment',
    inputs: [
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'paymentId',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'tokenAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'payer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'metadata',
        type: 'string',
        internalType: 'string',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'tokenWhitelist',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'updateConfirmationBlockHeight',
    inputs: [
      {
        name: 'newConfirmationBlockHeight',
        type: 'uint40',
        internalType: 'uint40',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'whitelistToken',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        internalType: 'address[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawERC20',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'recipient',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'success',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'withdrawNative',
    inputs: [
      {
        name: 'recipient',
        type: 'address',
        internalType: 'address payable',
      },
    ],
    outputs: [
      {
        name: 'success',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
  },
] as const

export class IOpenGateway__factory {
  static readonly abi = _abi
  static createInterface(): IOpenGatewayInterface {
    return new Interface(_abi) as IOpenGatewayInterface
  }
  static connect(address: string, runner?: ContractRunner | null): IOpenGateway {
    return new Contract(address, _abi, runner) as unknown as IOpenGateway
  }
}
